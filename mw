#!/usr/bin/env ruby
# coding: utf-8
# Copyright muflax <mail@muflax.com>, 2011
# License: GNU GPL 3 <http://www.gnu.org/copyleft/gpl.html>

require "trollop"
require "socket"
require "shellwords"

# defaults
options = {
  volume: 0,
  position: :right,
  speed: 1.0,
}

# vars
host   	= Socket.gethostname
display	= ":0.0"
cmd    	= ["mpv"]

# check if there's a .mw file in the current path and if so, add it as options
if File.exists? ".mw"
  File.open(".mw", "r").each do |line|
    ARGV << line.chomp
  end
end

opts = Trollop.options do
  opt :volume, 	"increase volume",	default: 0,  	short: :+
  opt :speed,  	"increase speed", 	default: 1.0,	short: :x
  opt :youtube,	"youtube mode"

  opt :left, 	"play on left screen"
  opt :right,	"play on right screen"
  conflicts :left, :right

  opt :subtitle,	"use subtitle file",	type: :string

  opt :annex,	"try to copy over missing files",	default: true
end

position = if opts[:left]
             :left
           elsif opts[:right]
             :right
           else
             :left
           end

opts[:speed] = 1.4 if opts[:youtube] and not opts[:speed_given]

Trollop::educate if ARGV.empty?

# host-specific options
case host
when "azathoth"
  # screen handling
  case position
  when :left
    cmd << "--screen 0"
    system "nvidia-settings -a XVideoSyncToDisplay=DFP-1 >/dev/null"
  when :right
    cmd << "--screen 1"
    system "nvidia-settings -a XVideoSyncToDisplay=DFP-0 >/dev/null"
  end
end

# audio filter
cmd << "--af-add scaletempo"
if options[:volume] != 0
  cmd << "--af-add volume=#{options[:volume]}"
end

# speed increase
if options[:speed] != 1.0
  cmd << "--speed #{options[:speed]}"
end

# subtitle
if options[:subtitle]
  cmd << "--sub-file '#{options[:subtitle]}'"
end

# try to copy files over if possible
if opts[:annex]
  # TODO make this smarter
  annex_host = "pleonasty"

  ARGV.each do |file|
    # only care about missing files
    next unless File.symlink? file and not File.exists? file

    Dir.chdir File.dirname(file) do
      if system "git config --get annex.uuid > /dev/null"
        puts "getting: «#{file}»"
        system "git-annex", "get", "--from", annex_host, file
      end
    end
  end
end

# begin execution
ENV["DISPLAY"] = display
mplayer = cmd.join(" ") + " " + Shellwords.shelljoin(ARGV)
puts "running '#{mplayer}'..."
system mplayer
