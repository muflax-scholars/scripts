#!/usr/bin/env ruby
# coding: utf-8
# Copyright muflax <mail@muflax.com>, 2011
# License: GNU GPL 3 <http://www.gnu.org/copyleft/gpl.html>

require "parallel"

# where to store the backup?
Target = File.join(Dir.home, "spoiler/archive/www")

# number of parallel wgets
Parallel_num = 20

# filtered hosts
Hosts = [
         # chans
         /\d+chan\.\w+/,

         # video sites
         /beeq\.com/,
         /motherless\.com/,
         /mypinktube\.com/,
         /ted\.com/,
         /thedailyshow\.com/,
         /videos\.arte\.tv/,
         /vimeo\.com/,
         /xhamster\.com/,
         /youtube\.com/,
         
         # search sites
         /\/search\//,
         /\/search\.php/,
         /findtubes\.com/,
         /google\.com\/search/,
         /isohunt\.com/,
         /jpopsuki\.eu/,
         /lesswrong\.com\/search/,
         /library\.nu\/search/,
         /piratebay\.org/,
         /search(\?q)?=/,
         /search\?/,
         /wikipedia.*search=\w+/,
         
         # hosting sites
         /megaupload\.com/,
         /rapidshare\.com/,
         /warez-bb\.org/,

         # random sites without useful content
         /amazon\.\w+/,
         /github\.com/,
         /google\.\w+/,
         /imdb\.\w+/,
         /librarything\.com/,

         # archives
         /archive\.org/,
         /webcache\.googleusercontent\.com/,
         
         # session ids
         /\/session\//,
         /session(_?)(id)?=\w+/,
         /sid=\w+/,
        
         # local IPs
         /127\.0\.0\.1/,
         /192\.\d+\.\d+\.\d+/,
         /localhost/,

         # admin pages
         /blog\.muflax\.com\/wp-admin/,

         # wikipedia
         /wiki(p|m)edia\.\w+/,

         # short URL sites
         /bit\.ly/,
         /t\.co/,
         /tinyurl\.com/,

         # reddit-y sites (way too slow and huge)
         /(lesswrong|reddit)\.com/,

         # beeminder (I also save my data locally)
         /beeminder\.com/,

         # twitter (also locally)
         /twitter\.com/,

         # predictionbook newsfeeds
         /predictionbook\.com\/predictions\/(future|judged|new|unjudged)/,
         /predictionbook\.com\/happenstance/,
        ]

# skip this stuff
Extensions = [
              # execs
              "bin",
              "exe",
              "iso",
              "jar",

              # archives
              "7z",
              "bz2",
              "gz",
              "rar",
              "tar",
              "xz",
              "zip",

              # video / audio
              "avi",
              "flv",
              "mkv",
              "mov",
              "mp3",
              "mp4",
              "ogg",
              "swf",
              "webm",
              "wmv",

              # docs
              "djvu",
              "epub",
              "mobi",
              "pdf",

              # misc
              "torrent",
             ]

# delete files over that size
FileLimit = "4M"

# debug mode?
Debug = false

def filter_urls urls
  puts "filtering urls..."

  # remove trailing slashes
  urls.map!{|u| u.chomp.sub(%r{/$}, "")}

  # remove duplicates
  urls.uniq!

  # remove local files
  urls.delete_if{|u| u.match /^file:/}

  # remove useless hosts
  Hosts.each{|host| urls.delete_if{|u| u.match host}}

  # remove all file extensions (wget doesn't catch them
  Extensions.each{|ext| urls.delete_if{|u| u.match /\.#{ext}\b/}}

  if Debug
    # make debug mode deterministic
    urls.sort! 
  else
    # shuffle them to avoid polling the same server
    urls.shuffle!
  end

  urls
end

urls = filter_urls ARGF.to_a

puts "mirroring into #{Target}..."
Dir.chdir Target

exts = Extensions.map{|e| ".#{e}"}.join(",")
opts = "--quiet --continue --page-requisites -e robots=off --timestamping --reject #{exts} --timeout=15 --ignore-case --convert-links"

Parallel.each_with_index(urls, :in_threads=>Parallel_num) do |url, i|
  puts "backing up (#{i+1}/#{urls.size}): #{url}"
  system "wget #{opts} '#{url}'" unless Debug
end

puts "cleaning up..."

# remove large files
system "find #{Target} -size '+#{FileLimit}' -delete" unless Debug

# remove empty files
system "find #{Target} -size 0 -delete" unless Debug

# remove duplicates
system "ftwin -r #{Target} | ftwin-hardlink.rb" unless Debug
