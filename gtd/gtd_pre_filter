#!/usr/bin/env python3

import datetime, fileinput, re

colors = {"none":'',
          "black":'\033[0;30m',
          "red":'\033[0;31m',
          "green":'\033[0;32m',
          "brown":"\033[0;33m",
          "blue":"\033[0;34m",\
          "purple":"\033[0;35m",
          "cyan":"\033[0;36m",
          "grey":"\033[0;37m",
          "light_black":"\033[1;30m",
          "light_red":"\033[1;31m",
          "light_green":"\033[1;32m",
          "light_brown":"\033[1;33m",
          "light_blue":"\033[1;34m",
          "light_purple":"\033[1;35m",
          "light_cyan":"\033[1;36m",
          "white":"\033[1;37m",
          "reset":"\033[0m", 
         }

today = datetime.date.today()
wdays = ["mon", "tue", "wed", "thu", "fri", "sat", "sun"]
# Until which date should the todo item be done?
deadline_re = re.compile("(\[ (?P<year>\d+) / (?P<month>\d+) / (?P<day>\d+) \])",
                     re.X)
# From which day on should we start working on the item?
filter_re = re.compile("(\( (?P<year>\d+) / (?P<month>\d+) / (?P<day>\d+) \))",
                     re.X)

def parse_date(match):
    year, month, day = (int(match.group("year")),
                        int(match.group("month")),
                        int(match.group("day")))
    date = datetime.date(2000+year, month, day)

    diff = (date - today).days      
    weekday = wdays[date.weekday()]

    return (diff, year, month, day, weekday)


def parse_deadline(line):
    match = deadline_re.search(line)
    if match:
        diff, year, month, day, weekday = parse_date(match)
        new_date = "[%+d %02d/%02d/%02d]" % (diff, year, month, day)
        if diff > 2:
            color = "green"
        elif diff < 1:
            color = "red"
        else:
            color = "light_purple"

        line = deadline_re.sub(colors[color]+new_date+colors["reset"], line)
    return line

def parse_filter(line):
    match = filter_re.search(line)
    if match:
        diff, year, month, day, weekday = parse_date(match)
        new_date = "(%+d %02d/%02d/%02d %s)" % (diff, year, month, day, weekday)
        if diff >= 0:
            color = "light_purple"
        else:
            color = "purple"

        line = filter_re.sub(colors[color]+new_date+colors["reset"], line)
    return line


def main():
    for line in fileinput.input():
        # context
        line = re.sub("(@\S+)", 
                      colors["brown"]+r"\1"+colors["reset"],
                      line)
        # date
        line = parse_deadline(line)
        line = parse_filter(line)
        
        # recur
        line = re.sub("(^!\d+\s+|\s+!\d+($|\s+))", 
                      colors["light_cyan"]+r"\1"+colors["reset"],
                      line)
        
        print(line, end="")

if __name__ == "__main__":
    main()

