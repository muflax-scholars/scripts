#!/bin/zsh
# Copyright muflax <mail@muflax.com>, 2010
# License: GNU GPL 3 <http://www.gnu.org/copyleft/gpl.html>

# read in aliases
source ~/.zshrc

PRE_FILTER="/home/amon/in/gtd/pre_filter"
LOG="/home/amon/txt/todo/fume.log"
TODO="/home/amon/txt/todo/todo.txt"
SUME="/home/amon/in/fume/sume"
SIGNAL="/home/amon/in/fume/signal.wav"

function show_todo() {
    echo "  -> Incoming transmission! <-"
    TODOTXT_VERBOSE=0 now list
    echo "--"
    ashuku add
}

function question_me() {
    while true; do
        show_todo
        echo 
        echo "What do you want to do next?"
        echo -n "$fg[green](s)${reset_color}uggest "
        echo -n "$fg[green](r)${reset_color}efresh "
        echo -n "$fg[green](c)${reset_color}hoose "
        echo -n "$fg[green](k)${reset_color}keep on working "
        echo -n "$fg[red](q)${reset_color}quit"
        echo
        read -sk1 input
        case $input in
            s)
                suggest
                ;;
            c)
                choose
                ;;
            q)
                exit 0;
                ;;
            r)
                clear
                continue
                ;;
            k)
                break;
                ;;
            *)
                echo "Hu?"
                clear
                continue     
        esac
        break
    done
}

function suggest() {
    # pick items until a suggestion works
    while true; do
        suggestion=$($SUME)
        if [[ -z $suggestion ]]; then
            echo "Nothing to do. Sorry."
            return
        fi

        echo "What about '$(echo $suggestion | $PRE_FILTER)'?"
        echo -n "$fg[green](s)${reset_color}ure "
        echo -n "$fg[red](n)${reset_color}ope "
        echo
        read -sk1 input
        id=$(id_of $suggestion)
        case $input in
            s)
                work_on $id
                return
                ;;
            n)
                procrastinate_on $id
                continue
                ;;
            *)
                echo "Hu?"
        esac
    done
}

function id_of() {
    item=$1
    id=$(/bin/grep -nF "$item" $TODO | /bin/grep -oP "^\d+")
    echo $id
}
    

function choose() {
    echo "What item do you want?"
    read item
    case $item in
        [0-9]*)
            work_on $item
            ;;
        *)
            echo "Hu?"
    esac
}

function work_on() {
    id=$1
    item=$(now list_item $id)
    echo "working on '$(echo $item | $PRE_FILTER)'"
    echo "$(date +%s) $item" >> $LOG
}

function procrastinate_on() {
    id=$1
    echo "Transmission error detected. Requesting retry..."
    TODOTXT_VERBOSE=0 now append $id @broken
    TODOTXT_VERBOSE=0 now pri $id D
}

function main() {
    trap 'echo "Time machine boggled, recalibrating..."' INT
    while true; do
        question_me

        echo
        echo "Time machine is recharging..."
        sleep $(( $RANDOM % ( $MAX - $MIN + 1 ) + $MIN ))m
        mplayer -really-quiet $SIGNAL &
        echo "$fg[red]BZZZ$reset_color."
        echo -e '\a'
    done
}

MIN=${1:-10}
MAX=${2:-20}
if [[ $MIN != <-> || $MAX != <-> ]]; then
    echo "min ($MIN) and max ($MAX) must be numbers"
    exit 1
fi
echo "Starting time machine."
echo "River of time will be fished every $MIN to $MAX minutes..."
main
