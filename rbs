#!/bin/zsh -l
# Copyright muflax <mail@muflax.com>, 2013
# License: GNU GPL 3 <http://www.gnu.org/copyleft/gpl.html>

# always fail early
set -e

BACKUP_DIR="/mnt/nfs/backup"
BACKUP_BUP="${BACKUP_DIR}/home"
S3_BUCKET="s3://bup.muflax.com"
BACKUP_MACHINE="pleonasty.local"
DATE_FORMAT="+%Y-%m-%d"

LOCAL_PIG_DIR="${HOME}/pigs/daily"
CENTRAL_PIG_DIR="/mnt/nfs/pigs/daily"

function is_locked() {
  # check for lockfile
  if [[ -f /tmp/rbs.lock ]]; then
    # process already running?
    if [[ "$(ps -p $(cat /tmp/rbs.lock) | wc -l)" -gt 1 ]]; then
      echo "locked"
      return
    fi
  fi
  echo "unlocked"
}

if [[ $(is_locked) == "locked" ]]; then
  echo "process already running, aborting..."
  exit 1
fi

# create lockfile
rm -f /tmp/rbs.lock
echo $$ > /tmp/rbs.lock

echo "update local bup index..."
cd $HOME # do it here so that the bupignore paths work without rewriting
ionice -c3 bup index -u $HOME --xdev --exclude-from $HOME/.bupignore --exclude-from $HOME/.git_annex_dirs

# check if backup machine is available
set +e
ping -w 5 -c 1 $BACKUP_MACHINE
set -e
if [ $? -eq 0 ]; then # start backup
  echo "saving daily pigs..."
  $LOCAL_PIG_DIR/pigs.rb  	annex
  $CENTRAl_PIG_DIR/pigs.rb	zip
  $CENTRAl_PIG_DIR/pigs.rb	backup
  echo "pigs saved."

  echo "copy bup packs..."
  branch="$(hostname)-$(date $DATE_FORMAT)"
  bup save -n $branch $HOME -r $BACKUP_BUP/

  echo "verify bup packs..."
  cd $BACKUP_BUP
  bup -d . fsck -g -vv

  echo "uploading to amazon..."
  aws s3 sync --delete $BACKUP_BUP/ $S3_BUCKET
fi

# remove lockfile
rm -f /tmp/rbs.lock
