#!/bin/sh
# vars
export PATH=/bin:/sbin

echo "initfs: Starting..." 2>&1

# Mount /proc and /sys.
echo "initfs: Mounting /proc and /sys..." 2>&1
mount -n -t proc none /proc
mount -n -t sysfs none /sys

# dynamic devices
# mdev is faster than udev and doesn't need updates
echo /bin/mdev > /proc/sys/kernel/hotplug
mdev -s

# Get the root volume name from the kernel command line. In order for
# this to work correctly, "realroot=/dev/vg/lv" needs to be passed 
# to the kernel command line (where lv is replaced by your actual
# root volume's name.
echo "initfs: Determinig real root volume..." 2>&1
for name in `cat /proc/cmdline`
do
	case ${name} in
		realroot*)
			ROOTVOL=`expr "${name}" : '.*=\(.*\)'`
		;;
	esac
done

# Load keymap
loadkeys /etc/neo.map

# Set up dm-crypt mapping for root fs if needed
if `/bin/cryptsetup isLuks ${ROOTVOL} 2>/dev/null`
then
    echo "loading root on ${ROOTVOL}..."
	MAPPING=root
	until /bin/cryptsetup luksOpen ${ROOTVOL} ${MAPPING}; do :; done
	ROOTVOL=/dev/mapper/root
fi

# Check root fs
/bin/e2fsck -C 0 -p ${ROOTVOL}

# mount root ro
echo "initfs: Mounting $ROOTVOL readonly..." 2>&1
mount -n -t ext4 ${ROOTVOL} /newroot

# resume swap
#echo "initfs: Loading swap..." 2>&1
#cryptsetup -d /newroot/keys/resume_swap.key luksOpen /dev/sda4 resume_swap
#echo "initfs: Attempting resume..." 2>&1
#resume
#echo "initfs: Failed, booting normally..." 2>&1
#sleep 1
#cryptsetup luksClose resume_swap

# prepare booting of new root
export PATH=/newroot/bin:/newroot/sbin:$PATH

# Unmount /sys and /proc
echo "initfs: Unmounting /sys and /proc..." 2>&1
umount /sys
umount /proc

# switch to new root
cd /newroot
pivot_root . boot

echo "initfs: Starting the system..."
exec /bin/chroot . /bin/sh -c '/bin/umount /boot; exec /sbin/init 3' </dev/console >/dev/console 2>&1
